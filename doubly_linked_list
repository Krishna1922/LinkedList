#include<iostream>
#include<stdlib.h>
using namespace std;
struct node
{
  int data;
  struct node *next;
  struct node *prev;
};
void Traversal(struct node* head){
    struct node* ptr = head;
    while(ptr!=NULL){
        cout << ptr->data;
        ptr = ptr->next;
    }
    
}
struct node* Insert_Beg(struct node* head,int data){
    struct node* p = (struct node*)malloc(sizeof(struct node));
    p->prev = NULL;
    p->data = data;
    p->next = head->next;
    return head;
    
}
int
main ()
{

  /////////////////creating 4 node
  struct node *head = NULL;
  struct node *second = NULL;
  struct node *third = NULL;
  struct node *fourth = NULL;


  /////////////////4  memory allocation////////////////////
  head = (struct node *) malloc (sizeof (struct node));
  second = (struct node *) malloc (sizeof (struct node));
  third = (struct node *) malloc (sizeof (struct node));
  fourth = (struct node *) malloc (sizeof (struct node));


  head->data = 1;
  head->prev = NULL;
  head->next = second;

  second->data = 2;
  second->prev = head;
  second->next = third;

  third->data = 3;
  third->prev = second;
  third->next = fourth;

  fourth->data = 4;
  fourth->prev = third;
  fourth->next = NULL;

  Traversal (head);
  cout << endl << "After deletion of node" << endl;
  head = Insert_Beg(head,5);
  //head = Delete_index(head,2);
  //head = Delete_End (head);
  Traversal (head);

}
